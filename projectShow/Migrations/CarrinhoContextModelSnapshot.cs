// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace projectShow.Migrations
{
    [DbContext(typeof(CarrinhoContext))]
    partial class CarrinhoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("projectShow.Models.Carrinho", b =>
                {
                    b.Property<int>("CarrinhoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IngressoId")
                        .HasColumnType("int");

                    b.HasKey("CarrinhoId");

                    b.HasIndex("IngressoId");

                    b.ToTable("Carrinho");
                });

            modelBuilder.Entity("projectShow.Models.CasasDeShow", b =>
                {
                    b.Property<int>("CasasDeShowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NomeDaCasa")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CasasDeShowId");

                    b.ToTable("CasasDeShow");
                });

            modelBuilder.Entity("projectShow.Models.Eventos", b =>
                {
                    b.Property<int>("EventosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CapacidadeDoevento")
                        .HasColumnType("int");

                    b.Property<int>("CasasDeShowId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDoEvento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GeneroDoEvento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NomeDoEvento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("QuantidadeDeIngressos")
                        .HasColumnType("int");

                    b.Property<double>("ValorDoIngresso")
                        .HasColumnType("double");

                    b.HasKey("EventosId");

                    b.HasIndex("CasasDeShowId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("projectShow.Models.Ingresso", b =>
                {
                    b.Property<int>("IngressoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EventosId")
                        .HasColumnType("int");

                    b.HasKey("IngressoId");

                    b.HasIndex("EventosId");

                    b.ToTable("Ingresso");
                });

            modelBuilder.Entity("projectShow.Models.Carrinho", b =>
                {
                    b.HasOne("projectShow.Models.Ingresso", "Ingresso")
                        .WithMany()
                        .HasForeignKey("IngressoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("projectShow.Models.Eventos", b =>
                {
                    b.HasOne("projectShow.Models.CasasDeShow", "CasasDeShow")
                        .WithMany()
                        .HasForeignKey("CasasDeShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("projectShow.Models.Ingresso", b =>
                {
                    b.HasOne("projectShow.Models.Eventos", "Eventos")
                        .WithMany()
                        .HasForeignKey("EventosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
